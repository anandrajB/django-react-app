{"ast":null,"code":"var _jsxFileName = \"/home/anand/Music/jabtrac/src/Containers/Chart.js\";\n// import axios from \"axios\";\n// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n// // defaults.global.tooltips.enabled = false\n// // defaults.global.legend.position = 'bottom'\n// const Chart = ({ login , isAuthenticated })  => {\n//   // const [ firstdose , setFirstdose ] = useState([]);\n//   // const [ seconddose, setseconddose] = useState([]);\n//   // const [ both , setbothdose] = useState([]);\n//   // const[notboth , setnotboth] = useState([]);\n//   if (localStorage.getItem(\"token\")) {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `token ${localStorage.getItem(\"token\")}`,\n//         Accept: \"application/json\",\n//       },\n//     };\n//     const res =  axios.get(\n//         `http://127.0.0.1:8000/accounts/count/`,\n//         config\n//       );\n//     console.log(res)\n//   }\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n//           datasets: [\n//             {\n//               label: \"# of votes\",\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgba(255, 99, 132, 1)\",\n//                 \"rgba(54, 162, 235, 1)\",\n//                 \"rgba(255, 206, 86, 1)\",\n//                 \"rgba(75, 192, 192, 1)\",\n//                 \"rgba(153, 102, 255, 1)\",\n//                 \"rgba(255, 159, 64, 1)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n// export default Chart\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Chart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    if (localStorage.getItem(\"token\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `token ${localStorage.getItem(\"token\")}`,\n          Accept: \"application/json\"\n        }\n      };\n      axios.get(`http://127.0.0.1:8000/accounts/count/`, config);\n      const coin = res.data;\n      let emp = [];\n      let data = [];\n\n      coin => {\n        emp.push(employee);\n        data.push(FD);\n      };\n\n      console.log(coin);\n      this.setState({\n        chartData: {\n          labels: labels,\n          datasets: [{\n            label: \"Population\",\n            data: data,\n            backgroundColor: [\"rgba(255, 99, 132, 0.6)\", \"rgba(54, 162, 235, 0.6)\", \"rgba(255, 99, 132, 0.6)\"]\n          }]\n        }\n      });\n    }\n\n    render();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: Object.keys(this.state.chartData).length && /*#__PURE__*/_jsxDEV(Chart, {\n        chartData: this.state.chartData,\n        location: \"Massachusetts\",\n        legendPosition: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anand/Music/jabtrac/src/Containers/Chart.js"],"names":["React","Component","Chart","constructor","state","chartData","componentDidMount","getChartData","localStorage","getItem","config","headers","Authorization","Accept","axios","get","coin","res","data","emp","push","employee","FD","console","log","setState","labels","datasets","label","backgroundColor","render","Object","keys","length"],"mappings":";AAAA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC3CE,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAG;AADD,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAE;AACZ,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,SAAQJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAF/C;AAGPI,UAAAA,MAAM,EAAE;AAHD;AADI,OAAf;AAQAC,MAAAA,KAAK,CAACC,GAAN,CACG,uCADH,EAEEL,MAFF;AAIA,YAAMM,IAAI,GAAGC,GAAG,CAACC,IAAjB;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAID,IAAI,GAAG,EAAX;;AACAF,MAAAA,IAAI,IAAI;AACNG,QAAAA,GAAG,CAACC,IAAJ,CAASC,QAAT;AACAH,QAAAA,IAAI,CAACE,IAAL,CAAUE,EAAV;AACD,OAHD;;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,WAAKS,QAAL,CAAc;AACZpB,QAAAA,SAAS,EAAE;AACTqB,UAAAA,MAAM,EAACA,MADE;AAETC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEV,YAAAA,IAAI,EAAEA,IAFR;AAGEW,YAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe;AAHnB,WADQ;AAFD;AADC,OAAd;AAiBH;;AACDC,IAAAA,MAAM;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAY,KAAK5B,KAAL,CAAWC,SAAvB,EAAkC4B,MAAlC,iBACC,QAAC,KAAD;AACE,QAAA,SAAS,EAAE,KAAK7B,KAAL,CAAWC,SADxB;AAEE,QAAA,QAAQ,EAAC,eAFX;AAGE,QAAA,cAAc,EAAC;AAHjB;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhE0C","sourcesContent":["// import axios from \"axios\";\n// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n\n\n\n// // defaults.global.tooltips.enabled = false\n// // defaults.global.legend.position = 'bottom'\n\n// const Chart = ({ login , isAuthenticated })  => {\n//   // const [ firstdose , setFirstdose ] = useState([]);\n//   // const [ seconddose, setseconddose] = useState([]);\n//   // const [ both , setbothdose] = useState([]);\n//   // const[notboth , setnotboth] = useState([]);\n\n//   if (localStorage.getItem(\"token\")) {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `token ${localStorage.getItem(\"token\")}`,\n//         Accept: \"application/json\",\n//       },\n//     };\n  \n//     const res =  axios.get(\n//         `http://127.0.0.1:8000/accounts/count/`,\n//         config\n//       );\n    \n//     console.log(res)\n    \n    \n//   }\n  \n  \n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n//           datasets: [\n//             {\n//               label: \"# of votes\",\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgba(255, 99, 132, 1)\",\n//                 \"rgba(54, 162, 235, 1)\",\n//                 \"rgba(255, 206, 86, 1)\",\n//                 \"rgba(75, 192, 192, 1)\",\n//                 \"rgba(153, 102, 255, 1)\",\n//                 \"rgba(255, 159, 64, 1)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Chart\n\n\nimport React, { Component } from 'react'\n\nexport default class Chart extends Component {\n  constructor(){\n    super()\n    this.state = {\n      chartData : {}\n    }\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  }\n\n  getChartData(){\n    if (localStorage.getItem(\"token\")) {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `token ${localStorage.getItem(\"token\")}`,\n          Accept: \"application/json\",\n        },\n      };\n\n      axios.get(\n        `http://127.0.0.1:8000/accounts/count/`,\n        config\n      );\n      const coin = res.data\n      let emp = [];\n      let data = [];\n      coin => {\n        emp.push(employee);\n        data.push(FD);\n      }\n      console.log(coin)\n      this.setState({\n        chartData: {\n          labels:labels,\n          datasets: [\n            {\n              label: \"Population\",\n              data: data,\n              backgroundColor: [\n                \"rgba(255, 99, 132, 0.6)\",\n                \"rgba(54, 162, 235, 0.6)\",\n                \"rgba(255, 99, 132, 0.6)\"\n              ],\n            }\n          ]\n        }\n      });\n    \n  }\n  render() \n    return (\n      <div className=\"App\">\n          {Object.keys(this.state.chartData).length &&\n            <Chart\n              chartData={this.state.chartData}\n              location=\"Massachusetts\"\n              legendPosition=\"bottom\"\n            />\n          }\n          </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}