{"ast":null,"code":"// import axios from \"axios\";\n// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n// // defaults.global.tooltips.enabled = false\n// // defaults.global.legend.position = 'bottom'\n// const Chart = ({ login , isAuthenticated })  => {\n//   // const [ firstdose , setFirstdose ] = useState([]);\n//   // const [ seconddose, setseconddose] = useState([]);\n//   // const [ both , setbothdose] = useState([]);\n//   // const[notboth , setnotboth] = useState([]);\n//   if (localStorage.getItem(\"token\")) {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `token ${localStorage.getItem(\"token\")}`,\n//         Accept: \"application/json\",\n//       },\n//     };\n//     const res =  axios.get(\n//         `http://127.0.0.1:8000/accounts/count/`,\n//         config\n//       );\n//     let emp = [];\n//     let FD = []\n//   }\n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n//           datasets: [\n//             {\n//               label: \"# of votes\",\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgba(255, 99, 132, 1)\",\n//                 \"rgba(54, 162, 235, 1)\",\n//                 \"rgba(255, 206, 86, 1)\",\n//                 \"rgba(75, 192, 192, 1)\",\n//                 \"rgba(153, 102, 255, 1)\",\n//                 \"rgba(255, 159, 64, 1)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n// export default Chart","map":{"version":3,"sources":["/home/anand/Music/jabtrac/src/Containers/Chart.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import axios from \"axios\";\n// import React from \"react\";\n// import { Pie } from \"react-chartjs-2\";\n\n\n\n// // defaults.global.tooltips.enabled = false\n// // defaults.global.legend.position = 'bottom'\n\n// const Chart = ({ login , isAuthenticated })  => {\n//   // const [ firstdose , setFirstdose ] = useState([]);\n//   // const [ seconddose, setseconddose] = useState([]);\n//   // const [ both , setbothdose] = useState([]);\n//   // const[notboth , setnotboth] = useState([]);\n\n//   if (localStorage.getItem(\"token\")) {\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `token ${localStorage.getItem(\"token\")}`,\n//         Accept: \"application/json\",\n//       },\n//     };\n  \n//     const res =  axios.get(\n//         `http://127.0.0.1:8000/accounts/count/`,\n//         config\n//       );\n    \n//     let emp = [];\n//     let FD = []\n    \n    \n    \n//   }\n  \n  \n//   return (\n//     <div>\n//       <Pie\n//         data={{\n//           labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n//           datasets: [\n//             {\n//               label: \"# of votes\",\n//               data: [12, 19, 3, 5, 2, 3],\n//               backgroundColor: [\n//                 \"rgba(255, 99, 132, 0.2)\",\n//                 \"rgba(54, 162, 235, 0.2)\",\n//                 \"rgba(255, 206, 86, 0.2)\",\n//                 \"rgba(75, 192, 192, 0.2)\",\n//                 \"rgba(153, 102, 255, 0.2)\",\n//                 \"rgba(255, 159, 64, 0.2)\",\n//               ],\n//               borderColor: [\n//                 \"rgba(255, 99, 132, 1)\",\n//                 \"rgba(54, 162, 235, 1)\",\n//                 \"rgba(255, 206, 86, 1)\",\n//                 \"rgba(75, 192, 192, 1)\",\n//                 \"rgba(153, 102, 255, 1)\",\n//                 \"rgba(255, 159, 64, 1)\",\n//               ],\n//               borderWidth: 1,\n//             },\n//             // {\n//             //   label: 'Quantity',\n//             //   data: [47, 52, 67, 58, 9, 50],\n//             //   backgroundColor: 'orange',\n//             //   borderColor: 'red',\n//             // },\n//           ],\n//         }}\n//         height={400}\n//         width={600}\n//         options={{\n//           maintainAspectRatio: false,\n//           scales: {\n//             yAxes: [\n//               {\n//                 ticks: {\n//                   beginAtZero: true,\n//                 },\n//               },\n//             ],\n//           },\n//           legend: {\n//             labels: {\n//               fontSize: 25,\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Chart\n\n"]},"metadata":{},"sourceType":"module"}