{"ast":null,"code":"var _jsxFileName = \"/home/anandraj/Desktop/jabtrac/src/Containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../Actions/Auth\";\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport '../test.css';\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    login,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, seterrors] = useState(false);\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(email, password);\n\n    try {\n      login(email, password);\n    } catch (err) {\n      seterrors(true);\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (erro) return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-9 col-md-7 col-lg-5 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card card-signin my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title text-center\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => onSubmit(e),\n              class: \"form-signin\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-label-group rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"inputEmail\",\n                  className: \"form-control\",\n                  placeholder: \"Email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: e => onChange(e),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"inputEmail\",\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), errors == true && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"oops! can't login with given credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-success \",\n                type: \"submit\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-3\",\n                children: [\"Register your domain  \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/sign\",\n                  children: \"here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                class: \"my-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n                class: \"btn btn-lg btn-google btn-block text-uppercase\",\n                type: \"submit\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fab fa-google mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), \" Sign in with Google\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"muCyJSoKuJKOMVlSa5BNb6SdSb0=\");\n\n_c = Login;\n;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/anandraj/Desktop/jabtrac/src/Containers/Login.js"],"names":["React","useState","Link","Redirect","connect","login","GoogleLoginButton","Header","Login","isAuthenticated","formData","setFormData","email","password","errors","seterrors","onChange","e","target","name","value","onSubmit","preventDefault","err","erro","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../Actions/Auth\";\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport '../test.css';\nimport Header from \"./Header\";\n\nfunction Login({ login, isAuthenticated }){\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [errors, seterrors] = useState(false)\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login(email,password)\n    try {\n      login(email, password);\n      \n      \n    }\n    catch(err){\n      seterrors(true)\n    }\n    \n  };\n\n \n\n  if (isAuthenticated) {\n    return <Redirect to=\"/home\" />;\n  }\n  if(erro)\n  return (\n    \n    <div class=\"container\">\n      \n      <div class=\"row\">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n          <div class=\"card card-signin my-5\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title text-center\">Sign In</h5>\n              <form onSubmit={(e) => onSubmit(e)} class=\"form-signin\">\n                <div class=\"form-label-group rounded\">\n                  <input\n                    type=\"email\"\n                    id=\"inputEmail\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => onChange(e)}\n                    required\n                  />\n                  <label for=\"inputEmail\">Email address</label>\n                </div>\n                \n                {errors == true && <p>oops! can't login with given credentials</p>}\n                <button\n                  class=\"btn btn-success \"\n                  type=\"submit\"\n                  \n                >\n                  Sign in \n                </button>\n                \n\n                <p className='mt-3'>\n                Register your domain  <Link to='/sign'>here</Link>\n                </p>\n                <hr class=\"my-4\" />\n                <GoogleLoginButton\n                  class=\"btn btn-lg btn-google btn-block text-uppercase\"\n                  type=\"submit\"\n                >\n                  <i class=\"fab fa-google mr-2\"></i> Sign in with Google\n                </GoogleLoginButton>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n\n\n"]},"metadata":{},"sourceType":"module"}